create or replace view PA_STG_VW(
	ID,
	TRANSACTION_PRO_DATE,
	TRANSACTION_TYPE_CODE,
	TRANSACTION_CODE,
	WRITTEN_PREMIUM_AMT,
	CHARGE_TYPECODE,
	TOTALPREMIUMRPT,
	TOTALREPORTEDPREMIUM,
	PCTL_TYPECODE,
	TAX_AMOUNT,
	FEE_AMOUNT,
	SURCHARGE_AMOUNT,
	PREM_BASIS_AMT,
	AMOUNT,
	ACTUALAMOUNT,
	TRANSACTION_AMOUNT,
	ACCTG_PRD_ID,
	TRANS_EFF_DATE,
	TRANS_EXP_DATE,
	RISK_TYPE_CODE,
	PREM_FULLY_EARNED_FL,
	CURRENCY_CODE,
	INFORCE_PREM_AMOUNT
) as
WITH CTE_TRANSACTION_TYPE_CODE (TRANSACTION_TYPE_CODE,PC_cpcost_ID) AS
--CALCULATION OF TRANSACTION_TYPE_CODE
(SELECT dl_pc_ext.ET_pctl_pacost.TYPECODE as TRANSACTION_TYPE_CODE,dl_pc_ext.et_PC_cpcost.ID AS PC_cpcost_ID
from dl_pc_ext.ET_pctl_pacost
 left outer join dl_pc_ext.ET_PC_CPCOST
on dl_pc_ext.ET_pctl_pacost.id = dl_pc_ext.ET_PC_CPCOST.SUBTYPE),
CTE_TRANSACTION_CODE (TRANSACTION_CODE,PC_JOB_ID) AS
--CALCULATION OF TRANSACTION_CODE
(select dl_pc_ext.et_pctl_job.TYPECODE as TRANSACTION_CODE, dl_pc_ext.et_pc_JOB.ID AS PC_JOB_ID
from dl_pc_ext.et_pctl_job left outer join dl_pc_ext.et_pc_JOB 
on dl_pc_ext.et_pctl_job.id = dl_pc_ext.et_pc_JOB.SUBTYPE),
CTE_CHARGE_TYPECODE(CHARGE_TYPECODE,PC_BOPCOST_ID) AS
--CALCULATION OF CHARGE_TYPECODE
(select  dl_pc_ext.et_pctl_chargepattern.TYPECODE as CHARGE_TYPECODE,dl_pc_ext.et_pc_BOPCOST.ID AS PC_BOPCOST_ID
from dl_pc_ext.et_pctl_chargepattern left outer join dl_pc_ext.et_pc_BOPCOST
on dl_pc_ext.et_pctl_chargepattern.id = dl_pc_ext.et_pc_BOPCOST.CHARGEPATTERN),
CTE_CURRENCY_CODE (CURRENCY_CODE,PC_PATRANSACTION_ID) AS
--CALCULATION OF CHARGE_TYPECODE
(SELECT dl_pc_ext.et_pctl_currency.TYPECODE AS CURRENCY_CODE,dl_pc_ext.et_PC_PATRANSACTION.ID AS PC_PATRANSACTION_ID
FROM dl_pc_ext.et_pctl_currency LEFT OUTER JOIN dl_pc_ext.et_PC_PATRANSACTION
ON dl_pc_ext.et_pctl_currency.ID = dl_pc_ext.et_PC_PATRANSACTION.AMOUNT_CUR),
CTE_PCTL_TYPECODE (PCTL_TYPECODE,PC_POLICYPERIOD_ID) AS
--CALCULATION OF PCTL_TYPECODE
(SELECT dl_pc_ext.et_pctl_policyperiodstatus.TYPECODE as PCTL_TYPECODE,dl_pc_ext.et_pc_POLICYPERIOD.ID AS PC_POLICYPERIOD_ID
FROM dl_pc_ext.et_pctl_policyperiodstatus LEFT OUTER JOIN dl_pc_ext.et_pc_POLICYPERIOD
ON dl_pc_ext.et_pctl_policyperiodstatus.ID = dl_pc_ext.et_pc_POLICYPERIOD.STATUS)
SELECT 
dl_pc_ext.et_pc_PATRANSACTION.ID AS ID,
cast(dl_pc_ext.et_pc_JOB.CLOSEDATE AS DATETIME) as TRANSACTION_PRO_DATE,
TRANSACTION_TYPE_CODE, 
TRANSACTION_CODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Premium' AND dl_pc_ext.et_PC_PATRANSACTION.CHARGED=1) THEN dl_pc_ext.et_PC_PATRANSACTION.AMOUNT ELSE 0 END AS WRITTEN_PREMIUM_AMT,
CHARGE_TYPECODE,
dl_pc_ext.et_pc_POLICYPERIOD.TOTALPREMIUMRPT AS TOTALPREMIUMRPT,
dl_pc_ext.et_pc_POLICYTERM.TOTALREPORTEDPREMIUM AS TOTALREPORTEDPREMIUM,
PCTL_TYPECODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE = 'Taxes') THEN dl_pc_ext.et_PC_PATRANSACTION.AMOUNT ELSE 0 END AS TAX_AMOUNT,
CASE WHEN(CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='InstallmentFee' OR CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='ReinstatementFee') THEN
dl_pc_ext.et_PC_PATRANSACTION.AMOUNT ELSE 0 END AS FEE_AMOUNT,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Surcharges') THEN dl_pc_ext.et_PC_PATRANSACTION.AMOUNT ELSE 0 END AS SURCHARGE_AMOUNT,
CAST(dl_pc_ext.ET_PC_pacost.BASIS AS DECIMAL) AS PREM_BASIS_AMT,
CAST(dl_pc_ext.et_PC_PATRANSACTION.AMOUNT AS DECIMAL) AS AMOUNT,
CAST(dl_pc_ext.ET_PC_pacost.ACTUALAMOUNT AS DECIMAL) AS ACTUALAMOUNT,
dl_pc_ext.et_PC_PATRANSACTION.AMOUNT as TRANSACTION_AMOUNT,
TO_CHAR(DL_PC_EXT.et_PC_PATRANSACTION.WRITTENDATE,'MMYYYY')::NUMBER AS ACCTG_PRD_ID,
CAST(dl_pc_ext.et_PC_PATRANSACTION.EFFDATE AS DATETIME) AS TRANS_EFF_DATE,
cast(dl_pc_ext.et_PC_PATRANSACTION.EXPDATE AS DATETIME) AS TRANS_EXP_DATE,
'BA' AS RISK_TYPE_CODE,
CASE WHEN (dl_pc_ext.et_PC_PATRANSACTION.Written = 1 AND dl_pc_ext.et_PC_PATRANSACTION.TOBEACCRUED =1) THEN 'Y' ELSE 'N' END AS PREM_FULLY_EARNED_FL,
CURRENCY_CODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Premium' AND dl_pc_ext.et_PC_PATRANSACTION.CHARGED=1 )THEN dl_pc_ext.et_PC_PATRANSACTION.AMOUNT ELSE 0 END AS INFORCE_PREM_AMOUNT
FROM DL_PC_EXT.ET_PC_patransaction JOIN DL_PC_EXT.ET_PC_pacost
ON DL_PC_EXT.ET_PC_PACOST.ID = DL_PC_EXT.ET_PC_PATRANSACTION.PACost
JOIN DL_PC_EXT.ET_PC_policyperiod ON  DL_PC_EXT.ET_PC_PACOST.BranchID = DL_PC_EXT.ET_PC_POLICYPERIOD.ID
JOIN DL_PC_EXT.ET_PC_policyperiod AS PC_policyperiod_1 
ON PC_policyperiod_1.ID = DL_PC_EXT.ET_PC_PATRANSACTION.BranchID
LEFT OUTER JOIN DL_PC_EXT.ET_PC_PERSONALVEHICLECOV ON 
DL_PC_EXT.ET_PC_PACOST.BranchID = DL_PC_EXT.ET_PC_PERSONALVEHICLECOV.BranchID and  
DL_PC_EXT.ET_PC_PACOST.PersonalVehicleCov =  DL_PC_EXT.ET_PC_PERSONALVEHICLECOV.FixedID and 
DL_PC_EXT.ET_PC_POLICYPERIOD.EditEffectiveDate >= COALESCE (DL_PC_EXT.ET_PC_PERSONALVEHICLECOV.EffectiveDate, DL_PC_EXT.ET_PC_POLICYPERIOD.PeriodStart) and
DL_PC_EXT.ET_PC_POLICYPERIOD.EditEffectiveDate < COALESCE (DL_PC_EXT.ET_PC_PERSONALVEHICLECOV.ExpirationDate, DL_PC_EXT.ET_PC_POLICYPERIOD.PeriodEnd)
LEFT OUTER JOIN DL_PC_EXT.ET_PC_PERSONALAUTOCOV ON 
DL_PC_EXT.ET_PC_PACOST.BranchID =  DL_PC_EXT.ET_PC_PERSONALAUTOCOV.BranchID and  
DL_PC_EXT.ET_PC_PACOST.PersonalAutoCov =   DL_PC_EXT.ET_PC_PERSONALAUTOCOV.FixedID and 
DL_PC_EXT.ET_PC_POLICYPERIOD.EditEffectiveDate >= COALESCE( DL_PC_EXT.ET_PC_PERSONALAUTOCOV.EffectiveDate, DL_PC_EXT.ET_PC_POLICYPERIOD.PeriodStart) and
DL_PC_EXT.ET_PC_POLICYPERIOD.EditEffectiveDate < COALESCE( DL_PC_EXT.ET_PC_PERSONALAUTOCOV.ExpirationDate, DL_PC_EXT.ET_PC_POLICYPERIOD.PeriodEnd)
LEFT OUTER JOIN DL_PC_EXT.ET_PC_producercode
ON DL_PC_EXT.ET_PC_POLICYPERIOD.ProducerCodeOfRecordID = DL_PC_EXT.ET_PC_PRODUCERCODE.ID 
LEFT OUTER JOIN DL_PC_EXT.ET_PC_Organization ON 
 DL_PC_EXT.ET_PC_PRODUCERCODE.ORGANIZATIONID = DL_PC_EXT.ET_PC_ORGANIZATION.ID   
LEFT OUTER JOIN  DL_PC_EXT.ET_PC_job ON
PC_policyperiod_1.JOBID = DL_PC_EXT.ET_PC_JOB.ID
LEFT OUTER JOIN   DL_PC_EXT.ET_PC_AUDITINFORMATION 
ON DL_PC_EXT.ET_PC_JOB.AUDITINFORMATIONID = DL_PC_EXT.ET_PC_AUDITINFORMATION.ID
  LEFT OUTER JOIN CTE_TRANSACTION_TYPE_CODE    ON (dl_pc_ext.et_PC_PATRANSACTION.PACost = CTE_TRANSACTION_TYPE_CODE.PC_CPCOST_ID )
    LEFT OUTER JOIN CTE_TRANSACTION_CODE ON ( dl_pc_ext.et_PC_PATRANSACTION.ID = CTE_TRANSACTION_CODE.PC_JOB_ID)
    LEFT OUTER JOIN CTE_CHARGE_TYPECODE ON (dl_pc_ext.et_PC_PATRANSACTION.ID = CTE_CHARGE_TYPECODE.PC_BOPCOST_ID)
    LEFT OUTER JOIN CTE_CURRENCY_CODE ON(dl_pc_ext.et_PC_PATRANSACTION.ID =CTE_CURRENCY_CODE.PC_PATRANSACTION_ID)
    LEFT OUTER JOIN CTE_PCTL_TYPECODE    ON(dl_pc_ext.et_PC_PATRANSACTION.ID = CTE_PCTL_TYPECODE.PC_POLICYPERIOD_ID)
    LEFT OUTER JOIN dl_pc_ext.et_pc_POLICYTERM ON (dl_pc_ext.et_PC_PATRANSACTION.ID =dl_pc_ext.et_pc_POLICYTERM.ID )
    WHERE PCTL_TYPECODE IN ('Bound','AuditComplete');