create or replace view IM_STG_VW(
	ID,
	TRANSACTION_PRO_DATE,
	TRANSACTION_TYPE_CODE,
	TRANSACTION_CODE,
	WRITTEN_PREMIUM_AMT,
	CHARGE_TYPECODE,
	TOTALPREMIUMRPT,
	TOTALREPORTEDPREMIUM,
	PCTL_TYPECODE,
	TAX_AMOUNT,
	FEE_AMOUNT,
	SURCHARGE_AMOUNT,
	PREM_BASIS_AMT,
	AMOUNT,
	ACTUALAMOUNT,
	TRANSACTION_AMOUNT,
	ACCTG_PRD_ID,
	TRANS_EFF_DATE,
	TRANS_EXP_DATE,
	RISK_TYPE_CODE,
	PREM_FULLY_EARNED_FL,
	CURRENCY_CODE,
	INFORCE_PREM_AMOUNT
) as
WITH CTE_TRANSACTION_TYPE_CODE (TRANSACTION_TYPE_CODE,PC_cpcost_ID) AS
--CALCULATION OF TRANSACTION_TYPE_CODE
(SELECT dl_pc_ext.ET_pctl_imcost.TYPECODE as TRANSACTION_TYPE_CODE,dl_pc_ext.et_PC_cpcost.ID AS PC_cpcost_ID
from dl_pc_ext.ET_pctl_imcost
 left outer join dl_pc_ext.ET_PC_CPCOST
on dl_pc_ext.ET_pctl_imcost.id = dl_pc_ext.ET_PC_CPCOST.SUBTYPE),
CTE_TRANSACTION_CODE (TRANSACTION_CODE,PC_JOB_ID) AS
--CALCULATION OF TRANSACTION_CODE
(select dl_pc_ext.et_pctl_job.TYPECODE as TRANSACTION_CODE, dl_pc_ext.et_pc_JOB.ID AS PC_JOB_ID
from dl_pc_ext.et_pctl_job left outer join dl_pc_ext.et_pc_JOB 
on dl_pc_ext.et_pctl_job.id = dl_pc_ext.et_pc_JOB.SUBTYPE),
CTE_CHARGE_TYPECODE(CHARGE_TYPECODE,PC_BOPCOST_ID) AS
--CALCULATION OF CHARGE_TYPECODE
(select  dl_pc_ext.et_pctl_chargepattern.TYPECODE as CHARGE_TYPECODE,dl_pc_ext.et_pc_BOPCOST.ID AS PC_BOPCOST_ID
from dl_pc_ext.et_pctl_chargepattern left outer join dl_pc_ext.et_pc_BOPCOST
on dl_pc_ext.et_pctl_chargepattern.id = dl_pc_ext.et_pc_BOPCOST.CHARGEPATTERN),
CTE_CURRENCY_CODE (CURRENCY_CODE,PC_IMTRANSACTION_ID) AS
--CALCULATION OF CHARGE_TYPECODE
(SELECT dl_pc_ext.et_pctl_currency.TYPECODE AS CURRENCY_CODE,dl_pc_ext.et_PC_IMTRANSACTION.ID AS PC_IMTRANSACTION_ID
FROM dl_pc_ext.et_pctl_currency LEFT OUTER JOIN dl_pc_ext.et_PC_IMTRANSACTION
ON dl_pc_ext.et_pctl_currency.ID = dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT_CUR),
CTE_PCTL_TYPECODE (PCTL_TYPECODE,PC_POLICYPERIOD_ID) AS
--CALCULATION OF PCTL_TYPECODE
(SELECT dl_pc_ext.et_pctl_policyperiodstatus.TYPECODE as PCTL_TYPECODE,dl_pc_ext.et_pc_POLICYPERIOD.ID AS PC_POLICYPERIOD_ID
FROM dl_pc_ext.et_pctl_policyperiodstatus LEFT OUTER JOIN dl_pc_ext.et_pc_POLICYPERIOD
ON dl_pc_ext.et_pctl_policyperiodstatus.ID = dl_pc_ext.et_pc_POLICYPERIOD.STATUS)
SELECT 
dl_pc_ext.et_pc_IMTRANSACTION.ID AS ID,
cast(dl_pc_ext.et_pc_JOB.CLOSEDATE AS DATETIME) as TRANSACTION_PRO_DATE,
TRANSACTION_TYPE_CODE, 
TRANSACTION_CODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Premium' AND dl_pc_ext.et_PC_IMTRANSACTION.CHARGED=1) THEN dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT ELSE 0 END AS WRITTEN_PREMIUM_AMT,
CHARGE_TYPECODE,
dl_pc_ext.et_pc_POLICYPERIOD.TOTALPREMIUMRPT AS TOTALPREMIUMRPT,
dl_pc_ext.et_pc_POLICYTERM.TOTALREPORTEDPREMIUM AS TOTALREPORTEDPREMIUM,
PCTL_TYPECODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE = 'Taxes') THEN dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT ELSE 0 END AS TAX_AMOUNT,
CASE WHEN(CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='InstallmentFee' OR CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='ReinstatementFee') THEN
dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT ELSE 0 END AS FEE_AMOUNT,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Surcharges') THEN dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT ELSE 0 END AS SURCHARGE_AMOUNT,
CAST(dl_pc_ext.ET_PC_IMCOST.BASIS AS DECIMAL) AS PREM_BASIS_AMT,
CAST(dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT AS DECIMAL) AS AMOUNT,
CAST(dl_pc_ext.ET_PC_IMCOST.ACTUALAMOUNT AS DECIMAL) AS ACTUALAMOUNT,
dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT as TRANSACTION_AMOUNT,
TO_CHAR(DL_PC_EXT.et_PC_IMTRANSACTION.WRITTENDATE,'MMYYYY')::NUMBER AS ACCTG_PRD_ID,
CAST(dl_pc_ext.et_PC_IMTRANSACTION.EFFDATE AS DATETIME) AS TRANS_EFF_DATE,
cast(dl_pc_ext.et_PC_IMTRANSACTION.EXPDATE AS DATETIME) AS TRANS_EXP_DATE,
'BA' AS RISK_TYPE_CODE,
CASE WHEN (dl_pc_ext.et_PC_IMTRANSACTION.Written = 1 AND dl_pc_ext.et_PC_IMTRANSACTION.TOBEACCRUED =1) THEN 'Y' ELSE 'N' END AS PREM_FULLY_EARNED_FL,
CURRENCY_CODE,
CASE WHEN (CTE_CHARGE_TYPECODE.CHARGE_TYPECODE='Premium' AND dl_pc_ext.et_PC_IMTRANSACTION.CHARGED=1 )THEN dl_pc_ext.et_PC_IMTRANSACTION.AMOUNT ELSE 0 END AS INFORCE_PREM_AMOUNT

FROM DL_PC_EXT.ET_PC_IMTRANSACTION LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMCOST 
ON DL_PC_EXT.ET_PC_IMTRANSACTION.IMCost = DL_PC_EXT.ET_PC_IMCOST.ID 

LEFT OUTER JOIN DL_PC_EXT.ET_PC_POLICYPERIOD 
ON DL_PC_EXT.ET_PC_IMTRANSACTION.BRANCHID = DL_PC_EXT.ET_PC_POLICYPERIOD.ID

LEFT OUTER JOIN DL_PC_EXT.ET_PC_POLICYPERIOD AS PC_POLICYPERIOD_1
ON DL_PC_EXT.ET_PC_IMCOST.BRANCHID = PC_POLICYPERIOD_1.ID

LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV ON
DL_PC_EXT.ET_PC_IMCOST.BRANCHID = DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.BRANCHID AND
DL_PC_EXT.ET_PC_IMCOST.IMACCOUNTSRECCOV = DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.FIXEDID AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMACCOUNTSREC ON 
DL_PC_EXT.ET_PC_IMACCOUNTSREC.BRANCHID = DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.BRANCHID AND
DL_PC_EXT.ET_PC_IMACCOUNTSREC.FIXEDID = DL_PC_EXT.ET_PC_IMACCOUNTSRECCOV.IMACCOUNTSRECEIVABLE AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMACCOUNTSREC.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMACCOUNTSREC.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMBUILDING ON
DL_PC_EXT.ET_PC_IMACCOUNTSREC.BRANCHID = DL_PC_EXT.ET_PC_IMBUILDING.BRANCHID AND
DL_PC_EXT.ET_PC_IMACCOUNTSREC.IMBuilding = DL_PC_EXT.ET_PC_IMBUILDING.FixedID AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMBUILDING.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMBUILDING.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_pc_building ON
DL_PC_EXT.ET_PC_BUILDING.BRANCHID = DL_PC_EXT.ET_PC_IMBUILDING.BRANCHID and 
DL_PC_EXT.ET_PC_BUILDING.FIXEDID = DL_PC_EXT.ET_PC_IMBUILDING.BUILDING and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_BUILDING.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_BUILDING.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMSIGNCOV ON 
DL_PC_EXT.ET_PC_IMCOST.BRANCHID = DL_PC_EXT.ET_PC_IMSIGNCOV.BRANCHID and 
DL_PC_EXT.ET_PC_IMCOST.IMSIGNCOV = DL_PC_EXT.ET_PC_IMSIGNCOV.FIXEDID and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMSIGNCOV.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMSIGNCOV.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)


LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMSIGN ON
DL_PC_EXT.ET_PC_IMSIGNCOV.BRANCHID = DL_PC_EXT.ET_PC_IMSIGN.BRANCHID and 
DL_PC_EXT.ET_PC_IMSIGNCOV.IMSIGN = DL_PC_EXT.ET_PC_IMSIGN.FIXEDID and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMSIGN.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMSIGN.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_PC_IMLOCATION ON 
DL_PC_EXT.ET_PC_IMSIGN.BRANCHID = DL_PC_EXT.ET_PC_IMLOCATION.BRANCHID and 
DL_PC_EXT.ET_PC_IMSIGN.IMLOCATION = DL_PC_EXT.ET_PC_IMLOCATION.FIXEDID and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_IMLOCATION.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) and
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_IMLOCATION.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)
LEFT OUTER JOIN DL_PC_EXT.ET_PC_CONTRACTORSEQUIPCOV ON 
DL_PC_EXT.ET_PC_IMCOST.BRANCHID = DL_PC_EXT.ET_PC_CONTRACTORSEQUIPCOV.BRANCHID AND
DL_PC_EXT.ET_PC_IMCOST.CONTRACTORSEQUIPCOV = DL_PC_EXT.ET_PC_CONTRACTORSEQUIPCOV.FIXEDID AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_CONTRACTORSEQUIPCOV.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_CONTRACTORSEQUIPCOV.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS on 
DL_PC_EXT.ET_PC_IMCOST.BRANCHID = DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS.BRANCHID AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE(DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS.EFFECTIVEDATE, PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE(DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS.EXPIRATIONDATE, PC_POLICYPERIOD_1.PERIODEND)
LEFT OUTER JOIN DL_PC_EXT.ET_pc_policylocation AS  pc_policylocation
ON 
DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS.BRANCHID = PC_POLICYLOCATION.BRANCHID AND
DL_PC_EXT.ET_PC_EFFECTIVEDATEDFIELDS.PRIMARYLOCATION = PC_POLICYLOCATION.FIXEDID AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE >= COALESCE (pc_policylocation.EFFECTIVEDATE ,PC_POLICYPERIOD_1.PERIODSTART) AND
PC_POLICYPERIOD_1.EDITEFFECTIVEDATE < COALESCE (PC_POLICYLOCATION.EXPIRATIONDATE ,PC_POLICYPERIOD_1.PERIODEND)

LEFT OUTER JOIN DL_PC_EXT.ET_pc_job ON 
DL_PC_EXT.ET_PC_JOB.ID = DL_PC_EXT.ET_PC_POLICYPERIOD.JOBID

LEFT OUTER JOIN DL_PC_EXT.ET_pc_job AS PC_JOB_1
ON PC_JOB_1.ID = PC_POLICYPERIOD_1.JOBID

LEFT OUTER JOIN DL_PC_EXT.ET_PC_AUDITINFORMATION ON 
DL_PC_EXT.ET_PC_AUDITINFORMATION.ID = DL_PC_EXT.ET_PC_JOB.AUDITINFORMATIONID

LEFT OUTER JOIN DL_PC_EXT.ET_pc_policy on 
DL_PC_EXT.ET_PC_POLICYPERIOD.POLICYID = DL_PC_EXT.ET_PC_POLICY.ID
   LEFT OUTER JOIN CTE_TRANSACTION_TYPE_CODE    ON (dl_pc_ext.et_PC_IMTRANSACTION.IMCost = CTE_TRANSACTION_TYPE_CODE.PC_CPCOST_ID )
    LEFT OUTER JOIN CTE_TRANSACTION_CODE ON ( dl_pc_ext.et_PC_IMTRANSACTION.ID = CTE_TRANSACTION_CODE.PC_JOB_ID)
    LEFT OUTER JOIN CTE_CHARGE_TYPECODE ON (dl_pc_ext.et_PC_IMTRANSACTION.ID = CTE_CHARGE_TYPECODE.PC_BOPCOST_ID)
    LEFT OUTER JOIN CTE_CURRENCY_CODE ON(dl_pc_ext.et_PC_IMTRANSACTION.ID =CTE_CURRENCY_CODE.PC_IMTRANSACTION_ID)
    LEFT OUTER JOIN CTE_PCTL_TYPECODE    ON(dl_pc_ext.et_PC_IMTRANSACTION.ID = CTE_PCTL_TYPECODE.PC_POLICYPERIOD_ID)
    LEFT OUTER JOIN dl_pc_ext.et_pc_POLICYTERM ON (dl_pc_ext.et_PC_IMTRANSACTION.ID =dl_pc_ext.et_pc_POLICYTERM.ID )
    WHERE PCTL_TYPECODE IN ('Bound','AuditComplete');